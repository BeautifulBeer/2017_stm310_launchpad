/***************************************************
 This is a library for the MPR121 12-Channel Capacitive Sensor

 Designed specifically to work with the MPR121 breakout from Adafruit
 ----> https://www.adafruit.com/products/1982

 These sensors use I2C to communicate, 2+ pins are required to
 interface
 Adafruit invests time and resources providing this open source code,
 please support Adafruit and open-source hardware by purchasing
 products from Adafruit!

 Written by Limor Fried/Ladyada for Adafruit Industries.
 BSD license, all text above must be included in any redistribution
 ****************************************************/

#ifndef ADAFRUIT_MPR121_H
#define ADAFRUIT_MPR121_H

#include <stm32f10x.h>
#include <stm32f10x_i2c.h>
#include <stm32f10x_gpio.h>
#include <stm32f10x_rcc.h>

#define _BV(bit) (1 << (bit))

#define MPR121 I2C1

// The default I2C address
#define MPR121_I2CADDR_DEFAULT 0x5A
// The defalut buffer address
#define BUFADDR_DEFAULT 0x00

#define MPR121_TOUCHSTATUS_L 0x00
#define MPR121_TOUCHSTATUS_H 0x01
#define MPR121_FILTDATA_0L  0x04
#define MPR121_FILTDATA_0H  0x05
#define MPR121_BASELINE_0   0x1E

//Rising filter
#define MPR121_MHDR         0x2B
#define MPR121_NHDR         0x2C
#define MPR121_NCLR         0x2D
#define MPR121_FDLR         0x2E

//Falling filter
#define MPR121_MHDF         0x2F
#define MPR121_NHDF         0x30
#define MPR121_NCLF         0x31
#define MPR121_FDLF         0x32

//Touched Filter
#define MPR121_NHDT         0x33
#define MPR121_NCLT         0x34
#define MPR121_FDLT         0x35

//Electrode touch and release thresholds
#define MPR121_TOUCHTH_0    	0x41
#define MPR121_RELEASETH_0   	0x42
#define MPR121_TOUCHTH_1    	0x43
#define MPR121_RELEASETH_1   	0x44
#define MPR121_TOUCHTH_2    	0x45
#define MPR121_RELEASETH_2    	0x46
#define MPR121_TOUCHTH_3    	0x47
#define MPR121_RELEASETH_3    	0x48
#define MPR121_TOUCHTH_4    	0x49
#define MPR121_RELEASETH_4    	0x4A
#define MPR121_TOUCHTH_5    	0x4B
#define MPR121_RELEASETH_5    	0x4C
#define MPR121_TOUCHTH_6    	0x4D
#define MPR121_RELEASETH_6    	0x4E
#define MPR121_TOUCHTH_7    	0x4F
#define MPR121_RELEASETH_7    	0x50
#define MPR121_TOUCHTH_8    	0x51
#define MPR121_RELEASETH_8    	0x52
#define MPR121_TOUCHTH_9    	0x53
#define MPR121_RELEASETH_9    	0x54
#define MPR121_TOUCHTH_10    	0x55
#define MPR121_RELEASETH_10    	0x56
#define MPR121_TOUCHTH_11    	0x57
#define MPR121_RELEASETH_11    	0x58
#define MPR121_TOUCHTH_12    	0x59
#define MPR121_RELEASETH_12    	0x5A

//Debounce Setting
#define MPR121_DEBOUNCE 		0x5B

//Configuration Register
#define MPR121_CONFIG_AFE		0x5C
#define MPR121_CONFIG_FILTER 	0x5D
#define MPR121_ECR 				0x5E

//Electrode Current
#define MPR121_CHARGECURR_0 	0x5F
#define MPR121_CHARGECURR_1 	0x60
#define MPR121_CHARGECURR_2 	0x61
#define MPR121_CHARGECURR_3 	0x62
#define MPR121_CHARGECURR_4 	0x63
#define MPR121_CHARGECURR_5 	0x64
#define MPR121_CHARGECURR_6 	0x65
#define MPR121_CHARGECURR_7 	0x66
#define MPR121_CHARGECURR_8 	0x67
#define MPR121_CHARGECURR_9 	0x68
#define MPR121_CHARGECURR_10 	0x69
#define MPR121_CHARGECURR_11 	0x6A
#define MPR121_CHARGECURR_12 	0x6B

//Electrode Charge Times
#define MPR121_CHARGETIME_01 	0x6C
#define MPR121_CHARGETIME_23 	0x6D
#define MPR121_CHARGETIME_45 	0x6E
#define MPR121_CHARGETIME_67 	0x6F
#define MPR121_CHARGETIME_89 	0x70
#define MPR121_CHARGETIME_1011 	0x71
#define MPR121_CHARGETIME_12 	0x72

//Auto Configuration Register
#define MPR121_AUTOCONFIG0 0x7B
#define MPR121_AUTOCONFIG1 0x7C
#define MPR121_UPLIMIT   0x7D
#define MPR121_LOWLIMIT  0x7E
#define MPR121_TARGETLIMIT  0x7F

#define MPR121_GPIODIR  0x76
#define MPR121_GPIOEN  0x77
#define MPR121_GPIOSET  0x78
#define MPR121_GPIOCLR  0x79
#define MPR121_GPIOTOGGLE  0x7A

#define MPR121_SOFTRESET 0x80


void begin(uint8_t* buffer_);

uint16_t filteredData(uint8_t addr, uint8_t* buffer, uint8_t t);
uint16_t baselineData(uint8_t addr, uint8_t* buffer, uint8_t t);

uint8_t readRegister8(uint8_t addr, uint8_t reg, uint8_t* buffer);
uint16_t readRegister16(uint8_t addr, uint8_t reg, uint8_t* buffer);
//void writeRegister(uint8_t addr, uint8_t* buffer, uint8_t reg, uint8_t value);
uint16_t touched(uint8_t addr, uint8_t* buffer);
// Add deprecated attribute so that the compiler shows a warning
__attribute__((deprecated)) void setThreshholds(uint8_t touch, uint8_t release);
void setThresholds(uint8_t touch, uint8_t release);
void MPR121_I2C_ByteWrite(uint8_t slaveAddr, uint8_t writeAddr, uint8_t value);
void MPR121_I2C_BufferRead(u8 slaveAddr, u8* buffer, u8 readAddr, u16 NumByteToRead);
//uint8_t I2CADDR;
//uint8_t BUFFER;

#endif // ADAFRUIT_MPR121_H
